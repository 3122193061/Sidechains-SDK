scorex {
  dataDir = "%(DIRECTORY)s/sc_node%(NODE_NUMBER)s/blockchain"
  logDir = "%(DIRECTORY)s/sc_node%(NODE_NUMBER)s/log"

  restApi {
    bindAddress = "%(API_ADDRESS)s:%(API_PORT)s"
    api-key-hash = ""
    timeout = 5s
  }

  network {
    nodeName = "node%(NODE_NUMBER)s"
    bindAddress = "%(API_ADDRESS)s:%(BIND_PORT)s"
    knownPeers = []
    agentName = "2-Hop"
    maxConnections = %(MAX_CONNECTIONS)d
  }

  websocket {
	  address = "%(WEBSOCKET_ADDRESS)s"
	  connectionTimeout = %(CONNECTION_TIMEOUT)d milliseconds
	  reconnectionDelay = %(RECONNECTION_DELAY)d seconds
      reconnectionMaxAttempts = %(RECONNECTION_MAX_ATTEMPS)d
      wsServer = true
      wsServerPort = 0
  }

  wallet {
    seed = "%(WALLET_SEED)s"
    genesisSecrets = %(GENESIS_SECRETS)s
  }

  genesis {
    scGenesisBlockHex = "%(GENESIS_DATA)s"
    scId = "%(SIDECHAIN_ID)s"
    powData = "%(POW_DATA)s"
    mcBlockHeight = %(BLOCK_HEIGHT)d
    mcNetwork = %(NETWORK)s
    withdrawalEpochLength = %(WITHDRAWAL_EPOCH_LENGTH)d
    initialCumulativeCommTreeHash = "%(INITIAL_COMM_TREE_CUMULATIVE_HASH)s"
  }

  withdrawalEpochCertificate {
    submitterIsEnabled = %(SUBMITTER_CERTIFICATE)s
    certificateSigningIsEnabled = %(CERTIFICATE_SIGNING)s
    signersPublicKeys = %(SIGNER_PUBLIC_KEY)s
    signersThreshold = %(THRESHOLD)d
    signersSecrets = %(SIGNER_PRIVATE_KEY)s
    maxPks = %(MAX_PKS)d
    provingKeyFilePath = "%(PROVING_KEY_PATH)s"
    verificationKeyFilePath = "%(VERIFICATION_KEY_PATH)s"
  }

}
